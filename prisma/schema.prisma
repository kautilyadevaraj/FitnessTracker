generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id              String           @id @default(uuid())
  name            String?
  email           String           @unique
  username        String?
  password        String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  emailVerified   DateTime?        @map("email_verified")
  image           String?
  accounts        Account[]
  physicalFitness PhysicalFitness?
  sessions        Session[]

  @@map("users")
}

model PhysicalFitness {
  id              String   @id @default(uuid())
  userEmail       String   @unique
  height          Float
  weight          Float
  fitnessLevel    String
  primaryGoal     String
  lastUpdated     DateTime @default(now()) @updatedAt
  age             Int
  gender          String
  additionalInfo  String?
  workoutDuration Int
  workoutLocation String
  workoutsPerWeek Int
  user            User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)

  @@map("physical_fitness")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ExerciseDetails {
  name          String  @id(map: "ExcerciseDetails_pkey")
  equipment     String?
  category      String?
  targetedAreas String?
  videoURL      String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model test {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  images     Bytes?
}
